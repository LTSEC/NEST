openapi: 3.0.3
info:
  title: NEST API
  version: 1.0.0
  description: >
    API reference for LTSEC's NEST project.
servers:
  - url: https://api.ltsec.lan
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserCreate:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    AuthLogin:
      type: object
      required:
        - password
      properties:
        username:
          type: string
          description: username or email
        password:
          type: string
    AuthTokens:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    RefreshToken:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
    UserUpdate:
      type: object
      properties:
        email:
          type: string
          format: email
        displayName:
          type: string
        password:
          type: string
          format: password
        avatarUrl:
          type: string
          format: uri
    TeamCreate:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
    Team:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        ownerId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        members:
          type: array
          items:
            $ref: '#/components/schemas/TeamMember'
          maxItems: 100
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
          maxItems: 100
    TeamUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    TeamMember:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        role:
          type: string
          enum: [Captain, Co-Captain, Coach, Member]
        joinedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Invitation:
      type: object
      properties:
        inviteId:
          type: string
          format: uuid
        teamId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        role:
          type: string
          enum: [Captain, Co-Captain, Coach, Member]
        status:
          type: string
          enum: [pending, accepted, declined]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
security:
  - bearerAuth: []
paths:
  /api/users:
    post:
      summary: Create user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Created
  /api/auth/login:
    post:
      summary: User sign in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLogin'
      responses:
        '200':
          description: Tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokens'
  /api/auth/logout:
    post:
      summary: User log out
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
      responses:
        '204':
          description: No Content
  /api/users/{userId}:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User profile
    patch:
      summary: Edit user
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete user account
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/auth/password-reset/request:
    post:
      summary: Reset user password (request)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
      responses:
        '204':
          description: No Content
  /api/auth/refresh:
    post:
      summary: Refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
      responses:
        '200':
          description: New access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
  /api/teams:
    post:
      summary: Create team
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreate'
      responses:
        '201':
          description: Team created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /api/teams/{teamId}:
    get:
      summary: View team
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Team data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    patch:
      summary: Edit team
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamUpdate'
      responses:
        '200':
          description: Updated team
    delete:
      summary: Delete team
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/teams/{teamId}/members:
    post:
      summary: Join team
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
      responses:
        '201':
          description: Member added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
  /api/teams/{teamId}/invitations:
    post:
      summary: Invite user to team
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [userId]
              properties:
                userId:
                  type: string
                  format: uuid
                role:
                  type: string
                  enum: [Captain, Co-Captain, Coach, Member]
                message:
                  type: string
      responses:
        '201':
          description: Invitation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
  /api/teams/{teamId}/members/{userId}:
    patch:
      summary: Update member role
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [role]
              properties:
                role:
                  type: string
                  enum: [Captain, Co-Captain, Coach, Member]
      responses:
        '200':
          description: Member role updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
    delete:
      summary: Remove member
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/teams/{teamId}/invitations/{inviteId}/accept:
    post:
      summary: Accept invitation
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: inviteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Invitation accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
  /api/teams/{teamId}/invitations/{inviteId}/decline:
    post:
      summary: Decline invitation
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: inviteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Invitation declined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
  /api/users/{userId}/invitations:
    get:
      summary: View user invitations
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of invitations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invitation'
